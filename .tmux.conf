#==============================================================#
#                .tmux.conf                                    #
#==============================================================#

#--------------------------------------------------------------#
##          Basic Settings                                    ##
#--------------------------------------------------------------#

###      Base     ###
set-option -g status on
set-option -g status-interval 2
set-option -g status-utf8 on
set-window-option -g status-utf8 on

# prefixキーをC-\に変更する
set-option -g prefix 'C-\'
unbind C-b

# デフォルトシェル
set-option -g default-shell /bin/zsh
set-option -g default-command /bin/zsh

# キーストロークのディレイを減らす
set-option -sg escape-time 1
# ウィンドウのインデックスを1から始める
set-option -g base-index 1
# ペインのインデックスを1から始める
set-window-option -g pane-base-index 1

# ウィンドウ履歴の最大行数
set-option -g history-limit 5000

# 代替画面バッファを使わないようにする(親端末のTERMがxtermの場合)
#set-option -g terminal-overrides 'xterm*:smcup@:rmcup@'
set-option -g terminal-overrides 'xterm*:colors=256'

###     Color      ###
set-option -g default-terminal "screen-256color"

#set-option -g status-fg white
#set-option -g status-bg colour235
#set-option -g status-attr default
#set-window-option -g window-status-current-fg white
#set-window-option -g window-status-current-bg colour61
#set-window-option -g window-status-current-attr bright
## Unsettings
#set-window-option -g window-status-bg colour2
#set-window-option -g window-status-fg black
#set-window-option -g window-status-attr dim
#set-window-option -g window-status-current-bg black
#set-window-option -g window-status-current-fg colour2
#set-window-option -g window-status-current-attr bright
#set-option -g status-left-bg  magenta
#set-option -g status-left-fg  black
#set-option -g status-right-bg cyan
#set-option -g status-right-fg black
## 区切り線のスタイル
#set-option -g pane-active-border-bg    green
#set-option -g pane-active-border-fg    red
#set-option -g pane-border-bg           colour7
#set-option -g pane-border-fg           black
#set-option -g message-bg black #base02
#set-option -g message-fg brightred #orange
#set-option -g display-panes-active-colour blue #blue
#set-option -g display-panes-colour brightred #orange

#### COLOUR (Solarized 256)
# default statusbar colors
set-option -g status-bg colour235 #base02
set-option -g status-fg colour136 #yellow
set-option -g status-attr default
# default window title colors
set-window-option -g window-status-fg colour244 #base0
set-window-option -g window-status-bg default
#set-window-option -g window-status-attr dim
# active window title colors
set-window-option -g window-status-current-fg colour166 #orange
set-window-option -g window-status-current-bg default
#set-window-option -g window-status-current-attr bright
# pane border
set-option -g pane-border-fg colour235 #base02
set-option -g pane-active-border-fg colour240 #base01
# message text
set-option -g message-bg colour235 #base02
set-option -g message-fg colour166 #orange
# pane number display
set-option -g display-panes-active-colour colour33 #blue
set-option -g display-panes-colour colour166 #orange
# clock
set-window-option -g clock-mode-colour colour64 #green
# bell
set-window-option -g window-status-bell-style fg=colour235,bg=colour160 #base02, red


###     etc     ###
# viのキーバインドを使用する
set-window-option -g mode-keys vi
# クリップボード共有を有効にする
set-option -g default-command "reattach-to-user-namespace -l zsh"
set-option -g default-command ""

# ヴィジュアルノーティフィケーションを有効にする
set-window-option -g monitor-activity on
set-option -g visual-activity on

# Escの効きがいいらしい
set-option -s escape-time 0

# ペイン同時入力切り替え
set-option -g synchronize-panes off

# マウス操作切替
if '[ $(echo "`tmux -V | cut -d" " -f2` >= "2.1"" | bc) -eq 1 ]' \
  'set-option -g mouse on' \
  'set-option -g mode-mouse          off ; \
   set-option -g mouse-select-pane   off ; \
   set-option -g mouse-resize-pane   off ; \
   set-option -g mouse-select-window off'

# 矢印キーでペインを移動する
set-window-option -g xterm-keys on

#--------------------------------------------------------------#
##          Key Bind                                          ##
#--------------------------------------------------------------#

# 直前の画面に移動
bind 'C-\' run "tmux last-pane || tmux last-window || tmux new-window"

# デタッチ
bind d detach

# タイトル変更
bind A command-prompt "rename-window %%"
bind S command-prompt "rename-session %%"

# ウィンドウ選択
bind C-w choose-window

# 設定ファイルをリロードする
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# | でペインを縦に分割する
bind | split-window -h

# - でペインを横に分割する
bind - split-window -v

# Vimのキーバインドでペインを移動する
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# 矢印キーでペインを移動する
bind -n S-left select-pane -L
bind -n S-down select-pane -D
bind -n S-up select-pane -U
bind -n S-right select-pane -R

# すばやくコピーモードに移行する
bind -n C-up copy-mode
bind -n C-down paste-buffer

# ウィンドウの移動
bind -n C-S-left previous-window
bind -n C-S-right next-window
bind -n C-S-up new-window
bind -n C-S-down confirm-before 'kill-window'

# ペインの移動(ローテート)
bind -n C-O select-pane -t :.+
bind -r C-o select-pane -t :.+
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# Vimのキーバインドでペインをリサイズする
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# ペイン同時入力切り替え
bind e set-window-option synchronize-panes on \;\
  set-option -g status-bg red \; display 'synchronize begin'
bind E set-window-option synchronize-panes off \;\
  set-option -g status-bg colour235 \; display 'synchronize end'

# マウス操作を有効にする
bind m \
  if '[ $(echo "`tmux -V | cut -d" " -f2` >= "2.1"" | bc) -eq 1 ]' \
    'set-option -g mouse on \;\
     display "Mouse: ON"' \
    'set-option -g mode-mouse on \;\
     set-option -g mouse-resize-pane on \;\
     set-option -g mouse-select-pane on \;\
     set-option -g mouse-select-window on \;\
     display "Mouse: ON"'

bind M \
  if '[ $(echo "`tmux -V | cut -d" " -f2` >= "2.1"" | bc) -eq 1 ]' \
    'set-option -g mouse off ; \
     display "Mouse: OFF"' \
    'set-option -g mouse-select-window on ; \
     set-option -g mode-mouse off ; \
     set-option -g mouse-resize-pane off ; \
     set-option -g mouse-select-pane off ; \
     set-option -g mouse-select-window off ; \
     display "Mouse: OFF"'

# コピーモードの操作をvi風に設定する
bind Space copy-mode \; display "copy mode"
bind P paste-buffer
bind -t vi-copy v begin-selection
bind -t vi-copy V select-line
bind -t vi-copy C-v rectangle-toggle
bind -t vi-copy y copy-selection
bind -t vi-copy Y copy-line
bind -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"
bind -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"
bind -t vi-copy Escape cancel

# copy paste
bind [ copy-mode \; display "copy mode"
bind ] paste-buffer
bind C-] choose-buffer

# ペインをbreakする
bind D break-pane -d \; display "break-pane"
# Pre C-xでそのペインをkillする
bind C-x confirm-before 'kill-pane'
# Pre C-Xでそのウィンドウをkillする
bind C-X confirm-before 'kill-window'
# Pre qでそのセッションをkill-sessionする
bind q confirm-before 'kill-session'
# Pre C-qでtmuxそのもの（サーバとクライアント）をkillする
bind C-q confirm-before 'kill-server'

# vi-choice
bind -t vi-choice Escape cancel

# vi-edit
bind -t vi-edit Escape cancel

#--------------------------------------------------------------#
##          Status bar                                        ##
#--------------------------------------------------------------#
if '[ "${ENABLE_TMUX_POWERLINE}" = "false" ]' \
  'set-option -g status-justify "left" ; \
   set-option -g status-position bottom ; \
   set-option -g status-left-length 40 ; \
   set-option -g status-left "#[fg=green][#S:#I:#P]" ; \
   set-option -g status-right "#[fg=colour111][%Y-%m-%d(%a) %H:%M]"' \
  'set-option -g status-justify "left" ; \
   set-option -g status-left-length 90 ; \
   set-option -g status-right-length 60 ; \
   set-option -g status-left "#(~/.tmux/tmux-powerline/powerline.sh left)" ; \
   set-option -g status-right "#(~/.tmux/tmux-powerline/powerline.sh right)"'


#--------------------------------------------------------------#
##          Plugins                                           ##
#--------------------------------------------------------------#
if '[ $(echo "`tmux -V | cut -d" " -f2` >= "1.9"" | bc) -eq 1 ]' \
  'set-option -g @tpm_plugins "      \
    tmux-plugins/tpm                 \
    tmux-plugins/tmux-sensible       \
    tmux-plugins/tmux-resurrect      \
    tmux-plugins/tmux-open"        ; \
   run-shell "~/.tmux/plugins/tpm/tpm"'


